library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/Projects/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/Projects/JSNA/latex_summary/images/'
# Underlying cause of death in West Sussex, 2020
conditions <- c('Cancer','Diseases of the circulatory system','Diseases of the respiratory system','Mental and behavioural disorders','Diseases of the nervous system','Codes for special purposes','Other - not elsewhere classified','Diseases of the digestive system','External causes','Diseases of the genitourinary system','Endocrine, nutritional and metabolic diseases','Diseases of the musculoskeletal system / connective tissue','Infectious and parasitic diseases','Diseases of the skin and subcutaneous tissue','Diseases of the blood - involving the immune mechanism','Congenital malformations etc','Aged under 28 days - cause unclassified') %>% str_wrap(.,30)
cause_of_death_wsx <- tibble(
cause = conditions,
number = c(2720, 2185, 1012, 872, 840, 725, 467, 440, 338, 147, 142, 71, 66, 29, 19, 17, 15),
location = rep("West Sussex",17))
cause_of_death_wsx$cause <- factor(cause_of_death_wsx$cause, levels = rev(conditions))
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#617a89")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ft_pal
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=180,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=180,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=200,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=220,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(2),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=110,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(2),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,3000))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=110,height=110,units="mm")
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for source files
source_place <- '~/Documents/Projects/JSNA/latex_summary/data_sources/'
# Configure location for saving files
save_place <- '~/Documents/Projects/JSNA/latex_summary/images/'
the_data <- tibble(
measure = c(rep('Achieving a\ngood level of\ndevelopment\n(Foundation\nstage)',2),
rep('Achieving the\nexpected level in\nthe phonics\nscreening (Key\n stage 1 - at the\nend of Year 1)',2),
rep('Achieving the\nexpected standard\nin reading, writing\nand maths (Key\nStage 2)',2)),
status = rep(c('All pupils', 'Pupils with free school meal status'),3),
value = c(71.9,51,81,63,63,38)
)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value, y = value + 4), vjust = 0, position = position_dodge(0.9))+
theme_wsj() +
scale_fill_ft() +
expand_limits(y=c(0,100)) +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
axis.text.x = element_text(colour = 'black', size=rel(0.6)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value, y = value + 4), vjust = 0, position = position_dodge(0.9))+
theme_wsj() +
scale_fill_ft() +
expand_limits(y=c(0,100)) +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
axis.text.x = element_text(colour = 'black', size=rel(0.7)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 160, height = 100)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 160, height = 90)
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/Projects/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\n1,410 jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to 7,800\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 30, height = 10, units = 'cm', dpi = 'print')
ft_pal
# Estimated number of social care staff (all sector)
# https://www.skillsforcare.org.uk/adult-social-care-workforce-data-old/Workforce-intelligence/documents/Local-authority-area-summary-reports/South-East/2021/West-Sussex-Summary-2021.pdf
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for saving files
save_place <- '~/Documents/Projects/JSNA/latex_summary/images/'
sector_data <- tibble(
sector = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'),
value = c(9100,14500,1000,300)
)
sector_data$sector <- factor(sector_data$sector, levels = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'))
fact_1 <- '27% of workers are\nover 55'
fact_2 <- 'Average Age = 44'
fact_3 <- '82% female'
fact_4 <- '23% of worker on zero\nhours contracts'
fact_5 <- 'On average 8.8 days of\nsickness per year'
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col(fill='#0b53c1') +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
ggsave(filename = paste0(save_place,'03-sc-workforce.png'), plot = sector_plot, width = 18, height = 13, units = 'cm', dpi = 'print')
# Packages
library(tidyverse)
library(hrbrthemes)
library(fingertipsR)
library(ggthemes)
library(ggtext)
# Configure location for source files
source_place <- '~/Documents/Projects/JSNA/latex_summary/data_sources'
# Configure location for saving files
save_place <- '~/Documents/Projects/JSNA/latex_summary/images'
# Fingertips-y stuff
inds <- indicators()
### MY VARIABLES
XXXX <- 30315
YYYY <- "Population vaccination coverage - Flu (aged 65+)"
ZZZZ <- "65over_vaccine_flu"
ZZZZ <- "flu_vax_at_risk_popn"
##
le_indicator <- XXXX
df <- fingertips_data(IndicatorID = le_indicator, AreaTypeID = 102)
areas_of_interest <- c('England', 'South East Region', 'West Sussex')
df <- df %>%
filter(AreaName %in% areas_of_interest)
View(df)
indicator_timeperiod <- df$Timeperiod %>% unique() %>% sort()
indicator_timeperiod[seq(2,length(indicator_timeperiod),2)] <- ''
indicator_timeperiod
caption_data <- df %>%
filter(TimeperiodSortable == max(TimeperiodSortable)) %>%
select(AreaName,Value,Timeperiod) %>%
mutate(Value = round(Value,1))
caption <- paste0('**',str_replace_all(caption_data[2,3],' ',''),' YYYY**<br>',caption_data[2,1],' = ',caption_data[2,2],' years<br>',caption_data[1,1],' = ',caption_data[1,2],' years')
plot <- ggplot(
data = df,
mapping = aes(x = Timeperiod, y = Value, color = AreaName, group=AreaName))+
geom_line(size=2) +
geom_point(shape=21, size=3, fill = 'white', stroke = 3) +
##geom_richtext(x='2011 - 13', y=82.5, label=caption, stat = 'unique', color = 'black', hjust=0, fill = NA, label.color = NA, size = rel(5)) +
expand_limits(y = c(50, 100)) +
scale_x_discrete(labels = indicator_timeperiod) +
theme_wsj() +
scale_color_ft() +
theme(legend.position = c(.85,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y=YYYY)
plot
plot <- ggplot(
data = df,
mapping = aes(x = Timeperiod, y = Value, color = AreaName, group=AreaName))+
geom_line(size=2) +
geom_point(shape=21, size=3, fill = 'white', stroke = 3) +
##geom_richtext(x='2011 - 13', y=82.5, label=caption, stat = 'unique', color = 'black', hjust=0, fill = NA, label.color = NA, size = rel(5)) +
expand_limits(y = c(0, 60)) +
scale_x_discrete(labels = indicator_timeperiod) +
theme_wsj() +
scale_color_ft() +
theme(legend.position = c(.85,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y=YYYY)
plot
YYYY <- "Population vaccination coverage - Flu (at risk individuals)"
ZZZZ <- "flu_vax_at_risk_popn"
##
le_indicator <- XXXX
df <- fingertips_data(IndicatorID = le_indicator, AreaTypeID = 102)
areas_of_interest <- c('England', 'South East Region', 'West Sussex')
df <- df %>%
filter(AreaName %in% areas_of_interest)
indicator_timeperiod <- df$Timeperiod %>% unique() %>% sort()
indicator_timeperiod[seq(2,length(indicator_timeperiod),2)] <- ''
caption_data <- df %>%
filter(TimeperiodSortable == max(TimeperiodSortable)) %>%
select(AreaName,Value,Timeperiod) %>%
mutate(Value = round(Value,1))
caption <- paste0('**',str_replace_all(caption_data[2,3],' ',''),' YYYY**<br>',caption_data[2,1],' = ',caption_data[2,2],' years<br>',caption_data[1,1],' = ',caption_data[1,2],' years')
plot <- ggplot(
data = df,
mapping = aes(x = Timeperiod, y = Value, color = AreaName, group=AreaName))+
geom_line(size=2) +
geom_point(shape=21, size=3, fill = 'white', stroke = 3) +
##geom_richtext(x='2011 - 13', y=82.5, label=caption, stat = 'unique', color = 'black', hjust=0, fill = NA, label.color = NA, size = rel(5)) +
expand_limits(y = c(0, 60)) +
scale_x_discrete(labels = indicator_timeperiod) +
theme_wsj() +
scale_color_ft() +
theme(legend.position = c(.85,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y=YYYY)
plot
ggsave(plot, filename = paste0(ZZZZ,".png"),path = save_place, bg = 'transparent', units = 'mm', width = 235, height = 130)
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/Projects/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\n1,300 jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to 6,800\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 30, height = 10, units = 'cm', dpi = 'print')
