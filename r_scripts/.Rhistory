legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children',
title = 'School Readiness in West Sussex (2019)')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 180)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for source files
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images/'
the_data <- tibble(
measure = c(rep('Achieving a\ngood level of\ndevelopment\n(Foundation\nstage)',2),
rep('Achieving the\nexpected level in\nthe phonics\nscreening (Key\n stage 1 - at the\nend of Year 1)',2),
rep('Achieving the\nexpected standard\nin reading, writing\nand maths (Key\nStage 2)',2)),
status = rep(c('All pupils', 'Pupils with free school meal status'),3),
value = c(71.9,51,81,63,63,38)
)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status))+
geom_col(position = position_dodge())+
geom_text(aes(label = value, y = value + 2), vjust = 0, position = position_dodge(0.9))+
theme_wsj()+
scale_fill_ft() +
theme(legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children',
title = 'School Readiness in West Sussex (2019)')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 180)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for source files
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images/'
the_data <- tibble(
measure = c(rep('Achieving a\ngood level of\ndevelopment\n(Foundation\nstage)',2),
rep('Achieving the\nexpected level in\nthe phonics\nscreening (Key\n stage 1 - at the\nend of Year 1)',2),
rep('Achieving the\nexpected standard\nin reading, writing\nand maths (Key\nStage 2)',2)),
status = rep(c('All pupils', 'Pupils with free school meal status'),3),
value = c(71.9,51,81,63,63,38)
)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status))+
geom_col(position = position_dodge())+
geom_text(aes(label = value, y = value + 2), vjust = 0, position = position_dodge(0.9))+
theme_wsj()+
scale_fill_ft() +
theme(legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 180)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status))+
geom_col(position = position_dodge())+
geom_text(aes(label = value, y = value + 2), vjust = 0, position = position_dodge(0.9))+
theme_wsj()+
scale_fill_ft() +
expand_limits(y=c(0,100))
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value, y = value + 2), vjust = 0, position = position_dodge(0.9))+
theme_wsj() +
scale_fill_ft() +
expand_limits(y=c(0,100)) +
theme(legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value, y = value + 4), vjust = 0, position = position_dodge(0.9))+
theme_wsj() +
scale_fill_ft() +
expand_limits(y=c(0,100)) +
theme(legend.position = 'bottom',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
the_plot <- ggplot(
data = the_data,
mapping = aes(x = measure,
y = value,
group = status,
fill = status)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value, y = value + 4), vjust = 0, position = position_dodge(0.9))+
theme_wsj() +
scale_fill_ft() +
expand_limits(y=c(0,100)) +
theme(legend.position = 'top',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = 'plot',
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(y = '% of children')
print(the_plot)
ggsave(the_plot, filename = '02_school_readiness_2019.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images'
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
View(the_data)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images'
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
the_data$location <- factor(the_data$location, levels = c('England','West Sussex','Crawley','Chichester','Arun','Adur','Horsham','Mid Sussex'))
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
location_type = c('Country','County',rep('District and Borough',7)),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
the_data$location <- factor(the_data$location, levels = c('England','West Sussex','Crawley','Chichester','Arun','Adur','Horsham','Mid Sussex'))
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
theme_wsj() +
scale
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
theme_wsj() +
scale_fill_ft()
the_plot
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft()
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft() +
coord_flip()
the_plot
View(the_data)
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
location_type = c('Country','County',rep('District and Borough',7)),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
the_data$location <- factor(the_data$location, levels = c('England','West Sussex','Crawley','Chichester','Arun','Adur','Worthing','Horsham','Mid Sussex'))
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft() +
coord_flip()
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = rev(location), y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft() +
coord_flip()
the_plot
the_data$location <- factor(the_data$location, levels = rev(c('England','West Sussex','Crawley','Chichester','Arun','Adur','Worthing','Horsham','Mid Sussex'))_
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft() +
coord_flip()
the_plot
the_data$location <- factor(the_data$location, levels = rev(c('England','West Sussex','Crawley','Chichester','Arun','Adur','Worthing','Horsham','Mid Sussex')))
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_ft() +
coord_flip()
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222','#217','#2166ed')) +
coord_flip()
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip()
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),)
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none')
the_plot
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images'
the_data <- tibble(
location = c('England','West Sussex','Worthing','Adur','Arun','Crawley','Chichester','Horsham','Mid Sussex'),
location_type = c('Country','County',rep('District and Borough',7)),
claimants = c(56020, 480, 70, 40, 100, 115, 85, 30, 30),
population = c(33605600,479600,62600,35100,82400,69000,63200,81000,86400),
rate = claimants/population*1000
)
the_data$location <- factor(the_data$location, levels = rev(c('England','West Sussex','Crawley','Chichester','Arun','Adur','Worthing','Horsham','Mid Sussex')))
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none') +
labs(y = "Rate / 1,000 16-64 year olds")
the_plot
ggsave(the_plot, filename = 'longterm_jsa_claimants_wsx.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none') +
labs(x = "Rate / 1,000 16-64 year olds")
the_plot
ggsave(the_plot, filename = 'longterm_jsa_claimants_wsx.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none') +
labs(x = "Rate / 1,000 16-64 year olds",
caption = "Source: NOMIS")
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none') +
labs(y = "Rate / 1,000 16-64 year olds",
caption = "Source: NOMIS")
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none',
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = "Rate / 1,000 16-64 year olds",
caption = "Source: NOMIS")
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none',
axis.title.x = element_text(colour = 'black', size=rel(1))) +
labs(x = "Rate / 1,000 16-64 year olds",
caption = "Source: NOMIS")
the_plot
the_plot <- ggplot(data = the_data,
mapping = aes(x = location, y = rate, fill = location_type)) +
geom_col() +
theme_wsj() +
scale_fill_manual(values = c('#222222','#221177','#2166ed')) +
coord_flip() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
legend.position = 'none',
axis.title.x = element_text(colour = 'black', size=rel(1))) +
labs(y = "Rate / 1,000 16-64 year olds",
caption = "Source: NOMIS")
the_plot
ggsave(the_plot, filename = 'longterm_jsa_claimants_wsx.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
ggsave(the_plot, filename = 'longterm_jsa_claimants_wsx.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
# Employment gaps
library(tidyverse)
library(ggthemes)
library(ggtext)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images'
plot_tbl <- tibble(
measures = c('**with a long-term health condition**','**with learning disabilities**','**in contact with secondary mental health services**'),
values = c(9.9,78.6,68.7),
measure_labels = paste("Gap in employment between people",plot_tbl$measures,"and the overall employment rate")
)
label_delta <- 2 # How far to nudge labels along the x axis
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 2, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
title = 'Employment gaps in West Sussex',
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),)
plot(gaps_plot)
ggsave(gaps_plot, filename = 'employment_gaps.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
plot_tbl <- tibble(
measures = c('**with a long-term health condition**','**with learning disabilities**','**in contact with secondary mental health services**'),
values = c(9.9,78.6,68.7),
measure_labels = paste("Gap in employment between people",plot_tbl$measures,"and the overall employment rate")
)
label_delta <- 2 # How far to nudge labels along the x axis
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 2, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
title = 'Employment gaps in West Sussex',
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(rect = element_rect(fill = 'transparent', linetype = 0, colour = NA))
plot(gaps_plot)
ggsave(gaps_plot, filename = 'employment_gaps.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
plot_tbl <- tibble(
measures = c('**with a long-term health condition**','**with learning disabilities**','**in contact with secondary mental health services**'),
values = c(9.9,78.6,68.7),
measure_labels = paste("Gap in employment between people",plot_tbl$measures,"and the overall employment rate")
)
the_measures <- c('**with a long-term health condition**','**with learning disabilities**','**in contact with secondary mental health services**')
plot_tbl <- tibble(
measures = the_measures,
values = c(9.9,78.6,68.7),
measure_labels = paste("Gap in employment between people",the_measures,"and the overall employment rate")
)
label_delta <- 2 # How far to nudge labels along the x axis
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 2, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
title = 'Employment gaps in West Sussex',
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(rect = element_rect(fill = 'transparent', linetype = 0, colour = NA))
plot(gaps_plot)
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 2, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
title = 'Employment gaps in West Sussex',
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA))
plot(gaps_plot)
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 3, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
title = 'Employment gaps in West Sussex',
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA))
plot(gaps_plot)
ggsave(gaps_plot, filename = 'employment_gaps.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
gaps_plot <- ggplot(data = plot_tbl,
mapping = aes(x=values, y=reorder(measures,-values), label = measure_labels)) +
geom_col(fill = '#0b53c1') +
geom_textbox(nudge_x = label_delta, hjust = 0, box.colour = NA, fill = NA, size = 3, width = grid::unit(0.2, "npc")) +
labs(y = element_blank(),
caption = 'Source: OHID Fingertips') +
scale_y_discrete(breaks = c(1,2,3),
labels = c(NA, NA, NA)) +
scale_x_continuous(limits=c(0,100)) +
theme_wsj() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA))
plot(gaps_plot)
ggsave(gaps_plot, filename = 'employment_gaps.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 120)
