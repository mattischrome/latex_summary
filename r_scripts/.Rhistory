subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave('workforce_dial_chart.png', plot = all_the_dials, width = 16, height = 4, units = 'cm', dpi = 'print')
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 16, height = 4, units = 'cm', dpi = 'print')
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 32, height = 8, units = 'cm', dpi = 'print')
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 26, height = 13, units = 'cm', dpi = 'print')
# Social care gauge charts - just for visual fun
library(tidyverse)
library(patchwork)
save_place <- '~/Documents/JSNA/latex_summary/images/'
gg.gauge <- function(pos,the_title,the_subtitle,breaks=c(0,30,70,100)) {
require(ggplot2)
get.poly <- function(a,b,r1=0.5,r2=1.0) {
th.start <- pi*(1-a/100)
th.end   <- pi*(1-b/100)
th       <- seq(th.start,th.end,length=100)
x        <- c(r1*cos(th),rev(r2*cos(th)))
y        <- c(r1*sin(th),rev(r2*sin(th)))
return(data.frame(x,y))
}
ggplot()+
geom_polygon(data=get.poly(breaks[1],breaks[2]),aes(x,y),fill="lightsteelblue1")+
geom_polygon(data=get.poly(breaks[2],breaks[3]),aes(x,y),fill="lightsteelblue2")+
geom_polygon(data=get.poly(breaks[3],breaks[4]),aes(x,y),fill="lightsteelblue3")+
geom_polygon(data=get.poly(pos-1,pos+1,0.2),aes(x,y))+
geom_text(data=as.data.frame(breaks), size=5, fontface="bold", vjust=0,
aes(x=0.9*cos(pi*(1-breaks/100)),y=1.1*sin(pi*(1-breaks/100)),label=paste0(breaks,"%")))+
annotate("text",x=0,y=0,label=pos,vjust=0,size=8,fontface="bold")+
coord_fixed()+
theme_bw()+
theme(axis.text=element_blank(),
axis.title=element_blank(),
axis.ticks=element_blank(),
panel.grid=element_blank(),
panel.border=element_blank(),
plot.title=element_text(face='bold'))+
labs(title = the_title,
subtitle = the_subtitle)
}
dial_1 <- gg.gauge(6,'Vacancy rate\n\n','The vacancy rate in\n2020/21 equated to\nXXXX jobs\n')
dial_2 <- gg.gauge(33,'Turnover rate\n\n','The rate in 2020/21\nequated to YYYY\nleavers\n')
dial_3 <- gg.gauge(63,'Percentage of staff\nremaining in same\nsector','')
all_the_dials <- dial_1 + dial_2 + dial_3
# +
#   plot_annotation(title = 'A bunch of dial charts',
#                   subtitle = 'West Sussex, 2021')
print(all_the_dials)
ggsave(paste0(save_place,'workforce_dial_chart.png'), plot = all_the_dials, width = 30, height = 10, units = 'cm', dpi = 'print')
sector_data <- tibble(
sector = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'),
value = c(9100,14500,1000,300)
)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
theme_wsj() +
scale_fill_ft()
library(ggthemes)
library(hrbrthemes)
library(ggtext)
sector_data <- tibble(
sector = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'),
value = c(9100,14500,1000,300)
)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_data$sector <- factor(sector_data$sector, levels = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'))
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value, fill = 1))+
geom_col() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value, fill = 'blue'))+
geom_col() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value, fill = 'foo'))+
geom_col() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text() +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = value) +
theme_wsj() +
scale_fill_ft()
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = 'My label') +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 100) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 200) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 300) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 400) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 800) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 600) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 1000) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = 1100) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = -200) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = -300) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = -400) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -300,300)) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400)) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400), fontface = 'bold') +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400), fontface = 'bold', color = ifelse(sector_data$value>5000, 'black','white')) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft()
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)))
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -400,400), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
# Estimated number of social care staff (all sector)
# https://www.skillsforcare.org.uk/adult-social-care-workforce-data-old/Workforce-intelligence/documents/Local-authority-area-summary-reports/South-East/2021/West-Sussex-Summary-2021.pdf
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images/'
sector_data <- tibble(
sector = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'),
value = c(9100,14500,1000,300)
)
sector_data$sector <- factor(sector_data$sector, levels = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'))
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
ggsave(filename = paste0(save_place,'03-sc-workforce.png'), plot = sector_plot, width = 18, height = 18, units = 'cm', device = 'print')
# Estimated number of social care staff (all sector)
# https://www.skillsforcare.org.uk/adult-social-care-workforce-data-old/Workforce-intelligence/documents/Local-authority-area-summary-reports/South-East/2021/West-Sussex-Summary-2021.pdf
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images/'
sector_data <- tibble(
sector = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'),
value = c(9100,14500,1000,300)
)
sector_data$sector <- factor(sector_data$sector, levels = c('Domiciliary Care', 'Residential Care', 'Community', 'Day Services'))
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
ggsave(filename = paste0(save_place,'03-sc-workforce.png'), plot = sector_plot, width = 18, height = 18, units = 'cm', dpi = 'print')
ggsave(filename = paste0(save_place,'03-sc-workforce.png'), plot = sector_plot, width = 13, height = 13, units = 'cm', dpi = 'print')
ggsave(filename = paste0(save_place,'03-sc-workforce.png'), plot = sector_plot, width = 18, height = 13, units = 'cm', dpi = 'print')
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>10000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<10000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
5
sector_plot <- ggplot(data = sector_data,
mapping = aes(x=sector, y=value))+
geom_col() +
geom_text(label = sector_data$value, nudge_y = ifelse(sector_data$value>5000, -500,500), fontface = 'bold', color = ifelse(sector_data$value<5000, 'black','white')) +
theme_wsj() +
scale_fill_ft() +
theme(title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(y = 'Number of workers')
print(sector_plot)
