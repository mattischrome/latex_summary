# Did this at the command line because it was easier
# Pivot wider so one row per year
ewd_data <- ewd_data_ons %>%
pivot_wider(names_from = Statistic, values_from = Value) %>%
mutate(mean = mean(Number),
sd = sd(Number),
upper_outer = mean+2*sd,
upper_inner = mean+sd,
lower_inner = mean-sd,
lower_outer = mean-2*sd)
indicator_timeperiod <- ewd_data$Date %>% unique() %>% sort()
indicator_timeperiod[seq(2,length(indicator_timeperiod),2)] <- ''
ewd_plot <- ggplot(data = ewd_data,
mapping = aes(x=Date, y=Number, group=1)) +
geom_line(aes(y=mean))+
geom_line(aes(y=upper_outer), color='red', size=1.1)+
geom_line(aes(y=upper_inner), color='red', linetype=2)+
geom_line(aes(y=lower_inner), color='green', linetype=2)+
geom_line(aes(y=lower_outer), color='green',size=1.1)+
geom_line(size=2, color='blue')+
geom_point(shape=21, size=3, fill = 'white', stroke = 3, color='blue')+
scale_x_discrete(labels = indicator_timeperiod) +
theme_wsj()+
theme(legend.position = c(.8,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
panel.grid.minor = element_blank(),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
axis.text.x = element_text(angle = 270)) +
labs(x = '',
y='Excess Winter Mortality')
print(ewd_plot)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Import EWD data since 1992
# This is in a funny format, which I've already had to clean up a bit before R
ewd_data_ons <- read_csv(paste0(source_place,"wsx_ewd.csv"))
# Like OHID, we exclude Covid-19 from the excess winter deaths index
# Did this at the command line because it was easier
# Pivot wider so one row per year
ewd_data <- ewd_data_ons %>%
pivot_wider(names_from = Statistic, values_from = Value) %>%
mutate(mean = mean(Number),
sd = sd(Number),
upper_outer = mean+2*sd,
upper_inner = mean+sd,
lower_inner = mean-sd,
lower_outer = mean-2*sd)
ewd_plot <- ggplot(data = ewd_data,
mapping = aes(x=Date, y=Number, group=1)) +
geom_line(aes(y=mean))+
geom_line(aes(y=upper_outer), color='red', size=1.1)+
geom_line(aes(y=upper_inner), color='red', linetype=2)+
geom_line(aes(y=lower_inner), color='green', linetype=2)+
geom_line(aes(y=lower_outer), color='green',size=1.1)+
geom_line(size=2, color='blue')+
geom_point(shape=21, size=3, fill = 'white', stroke = 3, color='blue')+
theme_wsj()+
theme(legend.position = c(.8,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
panel.grid.minor = element_blank(),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1)),
axis.text.x = element_text(angle = 270)) +
labs(x = '',
y='Excess Winter Mortality')
print(ewd_plot)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Import EWD data since 1992
# This is in a funny format, which I've already had to clean up a bit before R
ewd_data_ons <- read_csv(paste0(source_place,"wsx_ewd.csv"))
# Like OHID, we exclude Covid-19 from the excess winter deaths index
# Did this at the command line because it was easier
# Pivot wider so one row per year
ewd_data <- ewd_data_ons %>%
pivot_wider(names_from = Statistic, values_from = Value) %>%
mutate(mean = mean(Number),
sd = sd(Number),
upper_outer = mean+2*sd,
upper_inner = mean+sd,
lower_inner = mean-sd,
lower_outer = mean-2*sd)
ewd_plot <- ggplot(data = ewd_data,
mapping = aes(x=Date, y=Number, group=1)) +
geom_line(aes(y=mean))+
geom_line(aes(y=upper_outer), color='red', size=1.1)+
geom_line(aes(y=upper_inner), color='red', linetype=2)+
geom_line(aes(y=lower_inner), color='green', linetype=2)+
geom_line(aes(y=lower_outer), color='green',size=1.1)+
geom_line(size=2, color='blue')+
geom_point(shape=21, size=3, fill = 'white', stroke = 3, color='blue')+
theme_wsj()+
theme(legend.position = c(.8,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
panel.grid.minor = element_blank(),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(x = '',
y='Excess Winter Mortality')
print(ewd_plot)
ggsave(paste0(save_place,"ewd_control_chart.png"),ewd_plot,width=180,height=90,units="mm")
ggsave(diupr_rag, filename = 'diupr_rag_bar.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
# 04-diupr-rag.r
# Packages
library(tidyverse)
library(hrbrthemes)
library(fingertipsR)
library(ggthemes)
library(ggtext)
# Configure location for source files
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
# Configure location for saving files
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Fingertips-y stuff
inds <- indicators()
inds_diupr <- inds[grep('DiUPR',inds$IndicatorName),]
diupr_indicator <- 93500
# NB 92317 value is percentage of males over 65 - need to check that this is the desired target of screening
# Looks OK: https://fingertips.phe.org.uk/covid19#page/6/gid/1938133361/pat/15/par/E92000001/ati/6/are/E12000004/iid/92317/age/94/sex/1/cat/-1/ctp/-1/cid/4/tbm/1/page-options/car-do-0
# df <- fingertips_data(IndicatorID = aaa_indicator, AreaTypeID = 101)
areas_of_interest <- c('England', 'South East region', 'West Sussex')
areas_of_interest_ds_and_bs <- c('Adur', 'Arun', 'Chichester', 'Crawley', 'Horsham', 'Mid Sussex', 'Worthing')
df_to_plot_upper <- fingertips_data(IndicatorID = diupr_indicator, AreaTypeID = 102) %>%
filter(AreaName %in% areas_of_interest) %>%
mutate(Geography = 'Upper')
df_to_plot_lower <- fingertips_data(IndicatorID = diupr_indicator, AreaTypeID = 101) %>%
filter(AreaName %in% areas_of_interest_ds_and_bs) %>%
mutate(Geography = 'Lower')
# We use AreaTypeID = 102 to get upper tier local authorities e.g. West Sussex and its CIPFA neighbours
# But we also need lower tier local authorities (Adur, Arun, etc) - this is AreaTypeID = 101
# For more information on areas in the Fingertips, run this code
# areas <- area_types()
# View(areas)
# Let's bind together the data sets we have
# NB we only need West Sussex from the UTLA data this time around
df_plot_all <-rbind(df_to_plot_lower, df_to_plot_upper) %>%
filter(TimeperiodSortable == max(TimeperiodSortable)) %>%
filter(Age == 'All ages') %>%
arrange(-Value) %>%
mutate(AreaName = forcats::fct_rev(forcats::fct_inorder(AreaName)),
AreaName = forcats::fct_relevel(AreaName, rev(areas_of_interest), after = Inf),
Geography = forcats::fct_relevel(Geography, c('Upper','Lower')),
AreaType = forcats::fct_relevel(AreaType, c('England','Region','Counties & UAs (pre Apr 2019)','Districts & UAs (pre Apr 2019)')))
(df_plot_all$AreaType %>% unique())
#  Plot 1 is a bar chart comparing West Sussex and LTLAs to the England rate
# This outputs all the possible values in this column
# (df_plot_all$ComparedtoEnglandvalueorpercentiles %>% unique)
rag_colours <- c('Higher' ='green','Similar'='orange','Not compared'='gray','Lower'='red')
# An added complication in this plot is that we need England, South East and West Sussex up top, and then the LTLAs in order of their rates
# Nice to have: skip a bar between these values and the LTLAs - not working at the moment, might revisit at some point possibly with facets
# Another variation is fixed order for LTLAs as well
# FYI This is a helpful blog post on all things bar chart: https://www.cedricscherer.com/2021/07/05/a-quick-how-to-on-labelling-bar-graphs-in-ggplot2/
indicator_name <- df_plot_all$IndicatorName %>% unique() %>% str_replace('\\(DiUPR\\)','') %>% str_to_title() %>% str_wrap(width = 60)
indicator_name <- paste0(indicator_name, " (", df_plot_all$Timeperiod %>% unique(),")")
diupr_rag <- ggplot(
data = df_plot_all,
mapping = aes(x = Value, y = AreaName, fill = ComparedtoEnglandvalueorpercentiles)) +
geom_bar(stat = 'identity')+
scale_fill_manual(values = rag_colours)+
theme_wsj() +
scale_color_ft() +
facet_grid(AreaType ~ ., scales = 'free', space = 'free') +
theme(legend.position = 'none',
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.x = element_text(colour = 'black', size=rel(1)),
strip.text = element_blank()) +
labs(x = indicator_name)#,       caption = indicator_caption)
print(diupr_rag)
ggsave(diupr_rag, filename = 'diupr_rag_bar.png', path = save_place, bg = 'transparent', units = 'mm', width = 180, height = 90)
hrbrthemes:::scale_colour_ft()
hrbrthemes:::scale_colour_ft
hrbrthemes:::ft_pal()
ft_pal()
ft_pal()
ft_pal
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Import EWD data since 1992
# This is in a funny format, which I've already had to clean up a bit before R
ewd_data_ons <- read_csv(paste0(source_place,"wsx_ewd.csv"))
# Like OHID, we exclude Covid-19 from the excess winter deaths index
# Did this at the command line because it was easier
# Pivot wider so one row per year
ewd_data <- ewd_data_ons %>%
pivot_wider(names_from = Statistic, values_from = Value) %>%
mutate(mean = mean(Number),
sd = sd(Number),
upper_outer = mean+2*sd,
upper_inner = mean+sd,
lower_inner = mean-sd,
lower_outer = mean-2*sd)
ewd_plot <- ggplot(data = ewd_data,
mapping = aes(x=Date, y=Number, group=1)) +
geom_line(aes(y=mean))+
geom_line(aes(y=upper_outer), color='red', size=1.1)+
geom_line(aes(y=upper_inner), color='red', linetype=2)+
geom_line(aes(y=lower_inner), color='green', linetype=2)+
geom_line(aes(y=lower_outer), color='green',size=1.1)+
geom_line(size=2, color='blue')+
geom_point(shape=21, size=3, fill = 'white', stroke = 3, color='#617a89')+
theme_wsj()+
theme(legend.position = c(.8,.1),
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
panel.grid.minor = element_blank(),
title = element_text(family = "sans", size = rel(1)),
rect = element_rect(fill = 'transparent', linetype = 0, colour = NA),
axis.title.y = element_text(colour = 'black', size=rel(1))) +
labs(x = '',
y='Excess Winter Mortality')
print(ewd_plot)
ggsave(paste0(save_place,"ewd_control_chart.png"),ewd_plot,width=180,height=90,units="mm")
ft_pal
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Underlying cause of death in West Sussex, 2020
conditions <- c('Cancer','Diseases of the circulatory system','Diseases of the respiratory system','Mental and behavioural disorders','Diseases of the nervous system','Codes for special purposes','Other - not elsewhere classified','Diseases of the digestive system','External causes','Diseases of the genitourinary system','Endocrine, nutritional and metabolic diseases','Diseases of the musculoskeletal system / connective tissue','Infectious and parasitic diseases','Diseases of the skin and subcutaneous tissue','Diseases of the blood - involving the immune mechanism','Congenital malformations etc','Aged under 28 days - cause unclassified') %>% str_wrap(.,30)
cause_of_death_wsx <- tibble(
cause = conditions,
number = c(2720, 2185, 1012, 872, 840, 725, 467, 440, 338, 147, 142, 71, 66, 29, 19, 17, 15),
location = rep("West Sussex",17))
cause_of_death_wsx$cause <- factor(cause_of_death_wsx$cause, levels = rev(conditions))
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(color="#617a89")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(ggtext)
source_place <- '~/Documents/JSNA/latex_summary/data_sources/'
save_place <- '~/Documents/JSNA/latex_summary/images/'
# Underlying cause of death in West Sussex, 2020
conditions <- c('Cancer','Diseases of the circulatory system','Diseases of the respiratory system','Mental and behavioural disorders','Diseases of the nervous system','Codes for special purposes','Other - not elsewhere classified','Diseases of the digestive system','External causes','Diseases of the genitourinary system','Endocrine, nutritional and metabolic diseases','Diseases of the musculoskeletal system / connective tissue','Infectious and parasitic diseases','Diseases of the skin and subcutaneous tissue','Diseases of the blood - involving the immune mechanism','Congenital malformations etc','Aged under 28 days - cause unclassified') %>% str_wrap(.,30)
cause_of_death_wsx <- tibble(
cause = conditions,
number = c(2720, 2185, 1012, 872, 840, 725, 467, 440, 338, 147, 142, 71, 66, 29, 19, 17, 15),
location = rep("West Sussex",17))
cause_of_death_wsx$cause <- factor(cause_of_death_wsx$cause, levels = rev(conditions))
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#617a89")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ft_pal
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=180,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=180,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=200,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=180,height=220,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text.x = element_text(family = "sans"),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(4),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(2),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,300))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=90,height=110,units="mm")
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=110,height=110,units="mm")
cause_of_death_wsx_plot <- ggplot(data = cause_of_death_wsx,
mapping = aes(y=cause, x=number))+
geom_col(fill="#0b53c1")+
geom_richtext(aes(label = number),
color = "black",
fill = "white",
label.color = NA,
nudge_x = 2,
size = rel(2),
na.rm = TRUE,
hjust = 0,
vjust = 0.5) +
theme_wsj()+
scale_fill_ft()+
expand_limits(x=c(0,3000))+
theme(legend.position = "none",
legend.title = element_blank(),
legend.text = element_text(size = rel(1)),
plot.title.position = "plot",
plot.caption.position = "plot",
plot.title = element_text(family = "sans", size = rel(0.7)),
plot.subtitle = element_text(family = "sans", size = rel(0.6)),
plot.caption = element_text(family = "sans",
size = rel(0.6),
hjust = 0),
axis.text = element_text(family = "sans", size = rel(0.3)),
rect = element_rect(fill = "white",
linetype = 0,
colour = NA))
print(cause_of_death_wsx_plot)
ggsave(paste0(save_place,"underlying_cause_of_death.png"),cause_of_death_wsx_plot,width=110,height=110,units="mm")
